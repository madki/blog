<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>Stray thoughts &amp; keystrokes</title>
    <link>http://madki.xyz</link>
    <description>Web log of various coding experiments and attempts</description>
    <pubDate>Sat, 06 Feb 2016 10:18:00 +0000</pubDate>
    <item>
      <title>AutoIntent</title>
      <link>http://madki.xyz/auto-intent</link>
      <description>## The problem 

</description>
      <pubDate>Sat, 06 Feb 2016 10:18:00 +0000</pubDate>
      <dc:date>2016-02-06T10:18:00+00:00</dc:date>
    </item>
    <item>
      <title>Interface vs abstract class for `@Args`</title>
      <link>http://madki.xyz/interface-vs-abstract-class</link>
      <description>Having decided defining the `@Arg`s are better off by not being fields. Having an inner `class/interface` for them seems like a good idea. For a DemoActivity with two fields `int id` and `String name` the `class` and `interface` will look as follows:

</description>
      <pubDate>Fri, 05 Feb 2016 10:18:00 +0000</pubDate>
      <dc:date>2016-02-05T10:18:00+00:00</dc:date>
    </item>
    <item>
      <title>Defaults in Bundler 2.0</title>
      <link>http://madki.xyz/defaults-in-bundler-2</link>
      <description>The previous version of `Bundler` used fields, so they could be initialized to some value, if the intent/bundle recieved didn't contain the key corresponding to the field it was left as is. So in a way it provided some defaults. For example:

</description>
      <pubDate>Fri, 05 Feb 2016 10:18:00 +0000</pubDate>
      <dc:date>2016-02-05T10:18:00+00:00</dc:date>
    </item>
    <item>
      <title>Alternate approach for Bundler</title>
      <link>http://madki.xyz/alternate-appraoch-bundler</link>
      <description>## Problems with Bundler

</description>
      <pubDate>Thu, 04 Feb 2016 10:18:00 +0000</pubDate>
      <dc:date>2016-02-04T10:18:00+00:00</dc:date>
    </item>
    <item>
      <title>Bundler</title>
      <link>http://madki.xyz/bundler-intro</link>
      <description>### The problem
Bundles and intents in android are used every where. They're android's way of serializing data,
persisting state and decoupling elements completely so that one component (activity/service/..)
does not need to depend on an interface or a method from another component to start it. The problem
with intents and bundles is two-fold.
1. There is too much broiler plate
2. Type safety is lost in the process of serialization

</description>
      <pubDate>Fri, 15 Jan 2016 10:18:00 +0000</pubDate>
      <dc:date>2016-01-15T10:18:00+00:00</dc:date>
    </item>
    <dc:date>2016-02-06T10:18:00+00:00</dc:date>
  </channel>
</rss>